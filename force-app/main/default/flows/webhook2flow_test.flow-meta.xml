<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <name>Add_Message_to_error_messages</name>
        <label>Add Message to error messages</label>
        <locationX>50</locationX>
        <locationY>854</locationY>
        <assignmentItems>
            <assignToReference>Webhook2Flow_returnErrors</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>badFlowMessage</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>AddCase</name>
        <label>AddCase</label>
        <locationX>270</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>caseList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Add_All_Records</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_All_Records</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Error_message</name>
        <label>Set Error message</label>
        <locationX>50</locationX>
        <locationY>734</locationY>
        <assignmentItems>
            <assignToReference>badFlowMessage.ErrorMessage</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>This is a bad flow</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>badFlowMessage.ErrorId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>FLOW_ERROR</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Message_to_error_messages</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Deliberate_Error</name>
        <label>Deliberate Error?</label>
        <locationX>182</locationX>
        <locationY>614</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>generateError</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Error_message</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Test flow for webhook2flow</description>
    <interviewLabel>usf_webhook2flow_test {!$Flow.CurrentDateTime}</interviewLabel>
    <label>webhook2flow_test</label>
    <loops>
        <name>Add_All_Records</name>
        <label>Add All Records</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <collectionReference>Get_All_Cases_Test</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddCase</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Deliberate_Error</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_All_Cases_Test</name>
        <label>Get All Cases (Test)</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_All_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_All_Cases_Test</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>For testing Messages</description>
        <name>badFlowMessage</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>FlowExecutionErrorEvent</objectType>
    </variables>
    <variables>
        <name>booleanList</name>
        <dataType>Boolean</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>caseList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>caseListReflex</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>The employee&apos;s assigned company id</description>
        <name>companyId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>dateList</name>
        <dataType>Date</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>datetimeList</name>
        <dataType>DateTime</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The employee&apos;s first assigned cost center formatted as (Code - Description)</description>
        <name>employeeCostCenter1</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Boolean to generate an error deliberately</description>
        <name>generateError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Test for numberList</description>
        <name>numberList</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>Origin</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>StopStartDate</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Subject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>testCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>testParamBoolean</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>testParamDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>testParamDatetime</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>testParamNumber</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>testParamText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>textList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Webhook2Flow_returnErrors</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>FlowExecutionErrorEvent</objectType>
    </variables>
</Flow>
